{
    "_comment": "Jenkins Slave",
    "description": "Jenkins Slave Image",
    "variables": {
        "ami_name": "Jenkins-Slave-{{isotime}}"
    },
    "builders": [{
        "name": "Packer AMI Builder - Jenkins Slave Image",
        "type": "amazon-ebs",
        "ami_name": "{{user `ami_name`| clean_ami_name}}",
        "instance_type": "{{user `instance_type`}}",
        "region": "{{user `region`}}",
        "vpc_id": "{{user `vpc_id`}}",
        "subnet_id": "{{user `subnet_id`}}",
        "security_group_id": "{{user `security_group_id`}}",
        "ssh_username": "{{user `ssh_username`}}",
        "run_tags": {
            "Image_Name": "Packer-build-{{user `ami_name`| clean_ami_name}}"
        },
        "tags": {
            "Name": "{{user `ami_name`| clean_ami_name}}",
            "Parent_AMI": "{{user `source_ami`}}",
            "AMI_Type": "Jenkins Master MAC",
            "ManagedBy": "Packer"
        },
        "ami_description": "Base MAC Amazon Linux",
        "source_ami": "{{user `source_ami`}}",
        "associate_public_ip_address": false,
        "encrypt_boot": true,
        "kms_key_id" : "{{user `kms_key_id`}}",
        "ami_block_device_mappings": [{
            "device_name": "{{user `device_name`}}",
            "volume_type": "{{user `volume_type`}}",
            "volume_size": 20,
            "encrypted": false,
            "delete_on_termination": false
        }],
        "communicator": "ssh",
        "ssh_pty": true
    }],
    "provisioners": [{
        "type": "shell",
        "inline": [
            "sudo yum update -y",
            "sudo yum install git -y",
            "sudo yum install jq telnet git ntpdate ntp gcc gcc-c++ make openssl-devel expat-devel -y",
            "sudo yum groupinstall 'Development Tools' -y",
            "sudo amazon-linux-extras install ansible2 docker -y",
        
            "aws --version",
            "curl -O https://bootstrap.pypa.io/get-pip.py",
            "python get-pip.py --user",
            "echo \"export PATH=~/.local/bin:$PATH\" | tee --append /home/ec2-user/.bashrc", 
            "source ~/.bashrc",
            "pip --version",

            "sudo chkconfig docker on", 
            "sudo usermod -a -G docker $USER",
            "sudo service docker start",

            "wget http://nodejs.org/dist/v8.12.0/node-v8.12.0-linux-x64.tar.gz",
            "sudo tar --strip-components 1 -xzvf node-v* -C /usr/local",
            "sudo ln -s /usr/local/bin/node /usr/bin/node",
            "sudo ln -s /usr/local/lib/node /usr/lib/node",
            "sudo ln -s /usr/local/bin/npm /usr/bin/npm",
            "node --version",
            
            "curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/kubectl",
            "chmod +x ./kubectl",
            "sudo cp ./kubectl /usr/local/bin/kubectl && export PATH=/usr/local/bin:$PATH",
            "echo \"export PATH=/usr/local/bin:$PATH\"| tee --append /home/ec2-user/.bashrc",
            "kubectl version --short --client",
                 
            "curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator", 
            "chmod +x ./aws-iam-authenticator",
            "sudo cp ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator && export PATH=/usr/local/bin:$PATH",
            "echo \"export PATH=/usr/local/bin/bin:$PATH\" | tee --append /home/ec2-user/.bashrc",
            "aws-iam-authenticator help",

            "sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo",
            "sudo sed -i s/\\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo",
            "sudo yum install -y apache-maven",
            "mvn --version"

        ]
    },
    {
        "type": "shell",
        "inline": [
            "rm .ssh/authorized_keys ; sudo rm /root/.ssh/authorized_keys"
        ]
    }
   
    ]
}